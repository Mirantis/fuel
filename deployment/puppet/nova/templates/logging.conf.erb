[loggers]
keys = root

[handlers]
keys = production,devel,stderr

[formatters]
keys = normal,debug

[logger_root]
level = NOTSET
handlers = production,devel,stderr
propagate = 1

[formatter_debug]
format = nova-%(name)s %(levelname)s: %(module)s %(name)s:%(lineno)d %(funcName)s %(message)s

[formatter_normal]
format = nova-%(name)s %(levelname)s: %(module)s %(message)s

# Extended logging info to LOG_<%= @syslog_log_facility %> with debug:<%= @debug %> and verbose:<%= @verbose %>
# Note: local copy goes to /var/log/nova-all.log
[handler_production]
class = handlers.SysLogHandler
<% if @debug then -%>
level = DEBUG
formatter = debug
<% elsif @verbose then -%>
level = INFO
formatter = normal
<% else -%>
level = <%= @syslog_log_level %>
formatter = normal
<% end -%>
args = ('/dev/log', handlers.SysLogHandler.LOG_<%= @syslog_log_facility %>)

# TODO find out how it could be usefull and how it should be used
[handler_stderr]
class = StreamHandler
<% if @debug then -%>
level = DEBUG
formatter = debug
<% elsif @verbose then -%>
level = INFO
formatter = normal
<% else -%>
level = <%= @syslog_log_level %>
formatter = normal
<% end -%>
args = (sys.stderr,)

[handler_devel]
class = StreamHandler
<% if @debug then -%>
level = DEBUG
formatter = debug
<% elsif @verbose then -%>
level = INFO
formatter = normal
<% else -%>
level = <%= @syslog_log_level %>
formatter = normal
<% end -%>
args = (sys.stdout,)
