d-i debian-installer/locale string en_US.UTF-8

d-i debian-installer/splash boolean false

d-i console-setup/ask_detect        boolean false
d-i console-setup/layoutcode        string us
d-i console-setup/variantcode       string

# !!!! do not use netcfg/enable option because netcfg segfaults
# d-i netcfg/enable boolean false
d-i netcfg/choose_interface select auto

# by default we use dhcp but it is possible to set network
# configuration via kernel parameters
d-i netcfg/dhcp_timeout string 30
d-i netcfg/dhcp_failed note
d-i netcfg/dhcp_options select Configure network manually

# these lines must be added via system kopts
# d-i netcfg/get_hostname string nailgun
# d-i netcfg/get_domain string example.com

d-i hw-detect/load_firmware boolean true

d-i clock-setup/utc boolean true
d-i clock-setup/ntp boolean false
d-i time/zone string <%= @ks_system_timezone %>

d-i partman/early_command string debconf-set partman-auto/disk `list-devices disk | head -n1`
d-i partman-iscsi/mainmenu string finish
d-i partman-auto/method string lvm 
d-i partman-md/device_remove_md boolean true
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true
d-i partman-auto/choose_recipe select boot-lvm
d-i partman-auto/expert_recipe string                         \
      boot-lvm ::                                             \
              256 400 1024 ext3                               \
                      $primary{ } $bootable{ }                \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext3 }    \
                      mountpoint{ /boot }                     \
              .                                               \
              500 500 -1 ext3                                 \
                      method{ lvm }                           \
                      $defaultignore{ } $primary{ }           \
                      vg_name{ sysvol }                       \
              .                                               \
              1024 10000 1000000000 ext4                      \
                      $lvmok{ }                               \
                      in_vg{ sysvol }                         \
                      lv_name{ root }                         \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext4 }    \
                      mountpoint{ / }                         \
              .                                               \
              1024 500 300% linux-swap                        \
                      $lvmok{ }                               \
                      in_vg{ sysvol }                         \
                      lv_name{ swap }                         \
                      method{ swap }                          \
                      format{ }                               \
              .
d-i partman/confirm_write_new_label boolean true
d-i partman-auto/confirm_nooverwrite boolean true
d-i partman/choose_partition select Finish partitioning and write changes to disk
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman/default_filesystem string ext4

d-i base-installer/kernel/image string linux-server


##########
# REPOS
##########

d-i mirror/protocol string http
d-i mirror/country string manual
d-i mirror/http/hostname string $tree_host
d-i mirror/http/directory string $tree_url
d-i mirror/http/proxy string $proxy

d-i mirror/suite string precise
# Suite to use for loading installer components (optional).
d-i mirror/udeb/suite string precise
# Components to use for loading installer components (optional).
d-i mirror/udeb/components multiselect main, restricted


d-i apt-setup/restricted boolean true
d-i apt-setup/universe boolean true
d-i apt-setup/use_mirror boolean true

<% i = 0 -%>
<% @ks_repo.each do |repo| -%>
<% break if i > 9 -%>
d-i apt-setup/local<%= i %>/repository string <%= repo['url'] %> <%= repo['release'] %> <%= repo['repos'] %>
d-i apt-setup/local<%= i %>/comment string <%= repo['name'] %>
<% if repo.has_key?('key') -%>
d-i apt-setup/local<%= i %>/key string <%= repo['key'] %>
<% end -%>
<% i += 1 -%>
<% end -%>

d-i debian-installer/allow_unauthenticated boolean true

d-i console-setup/ask_detect boolean false
d-i keyboard-configuration/layoutcode string us
d-i keyboard-configuration/modelcode string SKIP


##########
# USERS
##########

# Allow root login
d-i passwd/root-login boolean true
d-i passwd/root-password-crypted password <%= @ks_encrypted_root_password %>

# Do not create plain user
d-i passwd/make-user boolean false
# d-i passwd/user-fullname string ubuntu
# d-i passwd/username string ubuntu
# d-i passwd/user-password password r00tme
# d-i passwd/user-password-again password r00tme
# d-i user-setup/allow-password-weak boolean true
# d-i user-setup/encrypt-home boolean false
# d-i passwd/user-uid string
# d-i passwd/user-default-groups string adm cdrom dialout lpadmin plugdev sambashare


############
# PACKAGES
############

tasksel tasksel/first multiselect standard

debconf debconf/frontend select Noninteractive

# d-i pkgsel/include string openssh-server debconf-utils
$SNIPPET('ubuntu_packages')
d-i pkgsel/language-packs multiselect en
d-i pkgsel/update-policy select none
d-i pkgsel/upgrade select none
d-i pkgsel/updatedb boolean true


##############
# BOOTLOADERS
##############

d-i grub-installer/skip     boolean false
d-i lilo-installer/skip     boolean false
d-i grub-installer/only_debian      boolean true
d-i grub-installer/with_other_os    boolean true


d-i finish-install/keep-consoles    boolean false
d-i finish-install/reboot_in_progress       note

d-i cdrom-detect/eject boolean true

d-i debian-installer/exit/halt boolean false
d-i debian-installer/exit/poweroff boolean false


################
# LATE COMMANDS
################

# TODO:
# add puppet and mcollective configuration
# add network configuration
d-i preseed/late_command string true && \
$SNIPPET('ubuntu_disable_pxe') && \
$SNIPPET('ubuntu_network') && \
$SNIPPET('cinder_create_lvm_group__ubuntu') && \
$SNIPPET('ubuntu_puppet_config') && \
$SNIPPET('ubuntu_mcollective_config') && \
echo -e "nf_conntrack_ipv4\nnf_conntrack_ipv6" >> /target/etc/modules && \
echo -e "net.nf_conntrack_max=1048576" >> /target/etc/sysctl.conf && \
in-target wget http://apt.puppetlabs.com/pubkey.gpg && \
in-target apt-key add /pubkey.gpg && \
rm /target/pubkey.gpg && \
true
